{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Homepage.jsx","components/Exchanges.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Loader","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","item","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","hoverable","millify","price","marketCap","change","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","Text","Typography","Option","Select","demoImage","News","setNewsCategory","cryptoNews","span","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","coin","news","i","href","rel","style","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","description","substring","provider","moment","datePublished","startOf","fromNow","Homepage","globalStats","stats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","volume","numberOfMarkets","marketShare","HTMLReactParser","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","Apps","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.7313ab3d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\nimport icon from '../images/cryptocurrency.png';\n\nconst Navbar = () => {\n\t//adding logic to make navbar mobile friendly\n\tconst [activeMenu, setActiveMenu] = useState(true);\n\tconst [screenSize, setScreenSize] = useState(null);\n\n\t//this useEffect will ONLY fire when the component renders\n\tuseEffect(() => {\n\t\tconst handleResize = () => setScreenSize(window.innerWidth); //this will set the screen\n\t\twindow.addEventListener('resize', handleResize);\n\t\thandleResize();\n\t\treturn () => window.removeEventListener('resize', handleResize); //return acts as a component unmount\n\t}, []);\n\n\t//this use will called when the screensize changes\n\tuseEffect(() => {\n\t\t//mobile width\n\t\tif (screenSize < 768) {\n\t\t\tsetActiveMenu(false);\n\t\t} else {\n\t\t\tsetActiveMenu(true);\n\t\t}\n\t}, [screenSize]);\n\n\treturn (\n\t\t<div className=\"nav-container\">\n\t\t\t<div className=\"logo-container\">\n\t\t\t\t<Avatar src={icon} size=\"large\" />\n\t\t\t\t<Typography.Title level={4} className=\"logo\">\n\t\t\t\t\t<Link to=\"/\"> CryptoMetaVerse</Link>\n\t\t\t\t</Typography.Title>\n\t\t\t\t<Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}>\n\t\t\t\t\t<MenuOutlined />\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t{activeMenu && (\n\t\t\t\t<Menu theme=\"dark\">\n\t\t\t\t\t<Menu.Item icon={<HomeOutlined />}>\n\t\t\t\t\t\t<Link to=\"/\"> Home</Link>\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t<Menu.Item icon={<FundOutlined />}>\n\t\t\t\t\t\t<Link to=\"/cryptocurrencies\"> Crypto Currencies</Link>\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t<Menu.Item icon={<MoneyCollectOutlined />}>\n\t\t\t\t\t\t<Link to=\"/exchanges\"> Exchanges</Link>\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t<Menu.Item icon={<BulbOutlined />}>\n\t\t\t\t\t\t<Link to=\"/news\"> News</Link>\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t</Menu>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Navbar;\n","//created an API that will fetch data. The data needs to be passed/exported to the store\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoApiHeaders = {\n\t'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n\t'x-rapidapi-key': '2bcfba5e9fmshf01a1980a736480p19b8d4jsn9e4f0a41364f'\n};\n\nconst baseUrl = 'https://coinranking1.p.rapidapi.com'\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n\treducerPath: 'cryptoApi',\n\tbaseQuery: fetchBaseQuery({ baseUrl }),\n\tendpoints: (builder) => ({\n\t\tgetCryptos: builder.query({\n\t\t\tquery: (count) => createRequest(`/coins?limit=${count}`),\n\t\t}),\n\t\tgetExchanges: builder.query({\n\t\t\tquery: (count) => createRequest(`/exchanges`),\n\t\t}),\n\t\tgetCryptoDetails: builder.query({\n\t\t\tquery: (coinId) => createRequest(`/coin/${coinId}`),\n\t\t}),\n\t\tgetCryptoHistory: builder.query({\n\t\t\tquery: ({ coinId, timePeriod }) => createRequest(`/coin/${coinId}/history/${timePeriod}`),\n\t\t}),\n\t}),\n});\n//the endpoint getCryptos needs the 'use' in the front and 'Query' in the end ==> redux boilerplate\nexport const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetCryptoHistoryQuery, useGetExchangesQuery } = cryptoApi;\n","import React from 'react';\nimport { Spin } from 'antd';\n\nconst Loader = () => (\n\t<div className=\"loader\">\n\t\t<Spin />\n\t</div>\n);\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n//Created a functional component that will display crypto coins\nconst Cryptocurrencies = ({ simplified }) => {\n\tconst count = simplified ? 10 : 100;\n\tconst { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n\tconst [cryptos, setCryptos] = useState();\n\tconst [searchTerm, setSearchTerm] = useState('');\n\n\t//initialize a useEffect\n\tuseEffect(() => {\n\t\t//filter out only the searched coin from the API\n\t\tconst filteredData = cryptosList?.data?.coins.filter((item) => item.name.toLowerCase().includes(searchTerm));\n\n\t\tsetCryptos(filteredData);\n\t}, [cryptosList, searchTerm]);\n\n\tif (isFetching) return <Loader />;\n\n\t//if not in home page show input field\n\treturn (\n\t\t<>\n\t\t\t{!simplified && (\n\t\t\t\t<div className=\"search-crypto\">\n\t\t\t\t\t<Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value.toLowerCase())} />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<Row gutter={[32, 32]} className=\"crypto-card-container\">\n\t\t\t\t{cryptos?.map((currency) => (\n\t\t\t\t\t<Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n\t\t\t\t\t\t<Link key={currency.id} to={`/crypto/${currency.id}`}>\n\t\t\t\t\t\t\t<Card title={`${currency.rank}. ${currency.name}`} extra={<img className=\"crypto-image\" src={currency.iconUrl} />} hoverable>\n\t\t\t\t\t\t\t\t<p>Price: {millify(currency.price)}</p>\n\t\t\t\t\t\t\t\t<p>Market Cap: {millify(currency.marketCap)}</p>\n\t\t\t\t\t\t\t\t<p>Daily Change: {currency.change}%</p>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t))}\n\t\t\t</Row>\n\t\t</>\n\t);\n};\n\nexport default Cryptocurrencies;\n","//redux boilerplate\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\n//header info. will be passed in the createRequest func.\nconst cryptoNewsHeaders = {\n\t'x-bingapis-sdk': 'true',\n\t'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\n\t'x-rapidapi-key': '2bcfba5e9fmshf01a1980a736480p19b8d4jsn9e4f0a41364f',\n};\n\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\nexport const cryptoNewsApi = createApi({//creates the an obj\n\treducerPath: 'cryptoNewsApi',\n\tbaseQuery: fetchBaseQuery({ baseUrl }),//accepts the url\n\tendpoints: (builder) => ({\n\t\tgetCryptoNews: builder.query({\n\t\t\tquery: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\n\t\t}),\n\t}),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import React, { useState } from 'react';\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\nimport moment from 'moment';\n\n\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';//imported CryptosNews to get add to the amount of cryptos per page\nimport { useGetCryptosQuery } from '../services/cryptoApi';//imported Cryptos to get an amount of cryptos per page\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n//demo image if theres no image available\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\n\nconst News = ({ simplified }) => {\n\tconst [newsCategory, setNewsCategory] = useState('Cryptocurrency');\n\tconst { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 });\n\tconst { data } = useGetCryptosQuery(100);\n//if there no news render 'loading' until info is available\n\tif (!cryptoNews?.value) return 'loading...';\n\t//placeholder will render 100 coins\n  return (\n\t\t<Row gutter={[24, 24]}>\n\t\t\t{!simplified && (\n\t\t\t\t<Col span={24}>\n\t\t\t\t\t<Select showSearch className=\"select-news\" placeholder=\"Select a Crypto News\" optionFilterProp=\"children\" onChange={(value) => setNewsCategory(value)} filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase())}>\n\t\t\t\t\t\t<Option value=\"Cryptocurrency\">Crypto Currency</Option>\n\t\t\t\t\t\t{data?.data?.coins.map((coin) => (\n\t\t\t\t\t\t\t<Option value={coin.name}> {coin.name}</Option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Select>\n\t\t\t\t</Col>\n\t\t\t)}\n\t\t\t{cryptoNews.value.map((news, i) => (\n\t\t\t\t<Col xs={24} sm={12} lg={8} key={i}>\n\t\t\t\t\t<Card hoverable className=\"news-card\">\n\t\t\t\t\t\t<a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t<div className=\"news-image-container\">\n\t\t\t\t\t\t\t\t<Title className=\"news-title\" level={4}>\n\t\t\t\t\t\t\t\t\t{news.name}\n\t\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t\t<img style={{ maxWidth: '200px', maxHeight: '100px' }} src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p>{news.description > 100 ? `${news.description.substring(0, 100)}...` : news.description}</p>\n\t\t\t\t\t\t\t<div className=\"provider-container\">\n\t\t\t\t\t\t\t\t<Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\" />\n\t\t\t\t\t\t\t\t<Text className=\"provider-name\">{news.provider[0]?.name}</Text>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t))}\n\t\t</Row>\n\t);\n};\n\nexport default News;\n","import React from 'react';\nimport millify from 'millify';//converts numbers\nimport { Typography, Row, Col, Statistic } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';//importing the API response from redux\nimport Cryptocurrencies from './Cryptocurrencies';\nimport News from './News';\nimport Loader from './Loader';\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n\tconst { data, isFetching } = useGetCryptosQuery(10);\n\tconst globalStats = data?.data?.stats;//optional chaining \n\n\tif (isFetching) return <Loader/>;\n\n\treturn (\n\t\t<>\n\t\t\t<Title level={2} className=\"heading\">\n\t\t\t\tGlobal Crypto Stats\n\t\t\t</Title>\n\t\t\t<Row gutter={[32, 32]}>\n\t\t\t\t<Col span={12}>\n\t\t\t\t\t<Statistic title=\"Total Crypto Currencies\" value={globalStats.total} />\n\t\t\t\t</Col>\n\t\t\t\t<Col span={12}>\n\t\t\t\t\t<Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} />\n\t\t\t\t</Col>\n\t\t\t\t<Col span={12}>\n\t\t\t\t\t<Statistic title=\"Total Market Cap:\" value={`$${millify(globalStats.totalMarketCap)}`} />\n\t\t\t\t</Col>\n\t\t\t\t<Col span={12}>\n\t\t\t\t\t<Statistic title=\"Total 24h Volume\" value={`$${millify(globalStats.total24hVolume)}`} />\n\t\t\t\t</Col>\n\t\t\t\t<Col span={12}>\n\t\t\t\t\t<Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<div className=\"home-heading-container\">\n\t\t\t\t<Title level={2} className=\"home-title\">\n\t\t\t\t\tTop 10 Cryptos In The World\n\t\t\t\t</Title>\n\t\t\t\t<Title level={3} className=\"show-more\">\n\t\t\t\t\t<Link to=\"/cryptocurrencies\">Show more</Link>\n\t\t\t\t</Title>\n\t\t\t</div>\n\t\t\t<Cryptocurrencies simplified />\n\t\t\t<div className=\"home-heading-container\">\n\t\t\t\t<Title level={2} className=\"home-title\">\n\t\t\t\t\tLatest Crypto News\n\t\t\t\t</Title>\n\t\t\t\t<Title level={3}>\n\t\t\t\t\t<Link to=\"/news\">Show more</Link>\n\t\t\t\t</Title>\n\t\t\t</div>\n\t\t\t<News simplified />\n\t\t</>\n\t);\n};\n\nexport default Homepage;\n","import React from 'react';\nimport millify from 'millify';\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\nimport HTMLReactParser from 'html-react-parser';\n\nimport { useGetExchangesQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n\tconst { data, isFetching } = useGetExchangesQuery();\n\tconst exchangesList = data?.data?.exchanges;\n\n\tif (isFetching) return <Loader />;\n\n\treturn (\n\t\t<>\n\t\t\t<Row>\n\t\t\t\t<Col span={6}>Exchanges</Col>\n\t\t\t\t<Col span={6}>24h Trade Volume</Col>\n\t\t\t\t<Col span={6}>Markets</Col>\n\t\t\t\t<Col span={6}>Change</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t{exchangesList.map((exchange) => (\n\t\t\t\t\t<Col span={24}>\n\t\t\t\t\t\t<Collapse>\n\t\t\t\t\t\t\t<Panel\n\t\t\t\t\t\t\t\tkey={exchange.id}\n\t\t\t\t\t\t\t\tshowArrow={false}\n\t\t\t\t\t\t\t\theader={(\n\t\t\t\t\t\t\t\t\t<Row key={exchange.id}>\n\t\t\t\t\t\t\t\t\t\t<Col span={6}>\n\t\t\t\t\t\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>{exchange.rank}.</strong>\n\t\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t\t\t<Avatar className=\"exchange-image\" src={exchange.iconUrl} />\n\t\t\t\t\t\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>{exchange.name}</strong>\n\t\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t<Col span={6}> $ {millify(exchange.volume)}</Col>\n\t\t\t\t\t\t\t\t\t\t<Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n\t\t\t\t\t\t\t\t\t\t<Col span={6}>{millify(exchange.marketShare)} % </Col>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{HTMLReactParser(exchange.description || '')}\n\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t</Col>\n\t\t\t\t))}\n\t\t\t</Row>\n\t\t</>\n\t);\n};\n\nexport default Exchanges;\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\n import Chart from 'chart.js/auto';\nimport { Col, Row, Typography } from 'antd';\n\nconst { Title } = Typography;\n//created a functional component that will create a chart/graph\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n\t//declared two arrays literal to keep track of price and time\n\tconst coinPrice = [];\n\tconst coinTimestamp = [];\n\n\t//looping until we reach the end of coinHistory ==> optional chaining \n\tfor (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n\t\tcoinPrice.push(coinHistory?.data?.history[i].price);\n\t}\n\n\tfor (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n\t\tcoinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\n\t}\n//constructed and filled out chart.js boilerplate\n\tconst data = {\n\t\tlabels: coinTimestamp,\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'Price In USD',\n\t\t\t\tdata: coinPrice,\n\t\t\t\tfill: false,\n\t\t\t\tbackgroundColor: '#0071bd',\n\t\t\t\tborderColor: '#0071bd',\n\t\t\t},\n\t\t],\n\t};\n\n\tconst options = {\n\t\tscales: {\n\t\t\tyAxes: [\n\t\t\t\t{\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t};\n//passed down the data and options objs\n\treturn (\n\t\t<>\n\t\t\t<Row className=\"chart-header\">\n\t\t\t\t<Title level={2} className=\"chart-title\">\n\t\t\t\t\t{coinName} Price Chart{' '}\n\t\t\t\t</Title>\n\t\t\t\t<Col className=\"price-container\">\n\t\t\t\t\t<Title level={5} className=\"price-change\">\n\t\t\t\t\t\tChange: {coinHistory?.data?.change}%\n\t\t\t\t\t</Title>\n\t\t\t\t\t<Title level={5} className=\"current-price\">\n\t\t\t\t\t\tCurrent {coinName} Price: $ {currentPrice}\n\t\t\t\t\t</Title>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Line data={data} options={options} />\n\t\t</>\n\t);\n};\n\nexport default LineChart;\n","import React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\n\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\nimport LineChart from './LineChart';\nimport Loader from './Loader';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\n//This component is handling the nested routing. It will render that history of the coin in a chart graph and links at the footer\nconst CryptoDetails = () => {\n\tconst { coinId } = useParams(); //takes the id from the URL\n\tconst [timePeriod, setTimePeriod] = useState('7d');\n\tconst { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n\tconst { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timePeriod });\n\tconst cryptoDetails = data?.data?.coin;\n\n\tif (isFetching) return <Loader />;\n\t//array with time periods for user choice inside of placeholder\n\tconst time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\t//array stats show case extra data a user would like to see\n\tconst stats = [\n\t\t{ title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\n\t\t{ title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\n\t\t{ title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\n\t\t{ title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\n\t\t{ title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\n\t];\n\t//array stats show case extra data a user would like to see\n\tconst genericStats = [\n\t\t{ title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\n\t\t{ title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n\t\t{ title: 'Approved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n\t\t{ title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\n\t\t{ title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\n\t];\n\n\treturn (\n\t\t<Col className=\"coin-detail-container\">\n\t\t\t<Col className=\"coin-heading-container\">\n\t\t\t\t<Title level={2} className=\"coin-name\">\n\t\t\t\t\t{cryptoDetails.name} ({cryptoDetails.slug}) Price\n\t\t\t\t</Title>\n\t\t\t\t<p>\n\t\t\t\t\t{cryptoDetails.name}\n\t\t\t\t\tView value Statistic marketCap and supply\n\t\t\t\t</p>\n\t\t\t</Col>\n\t\t\t<Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimePeriod(value)}>\n\t\t\t\t{time.map((date) => (\n\t\t\t\t\t<Option key={date}> {date}</Option>\n\t\t\t\t))}\n\t\t\t</Select>\n\t\t\t<LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\n\t\t\t<Col className=\"stats-container\">\n\t\t\t\t<Col className=\"coin-value-statistics\">\n\t\t\t\t\t<Col className=\"coin-value-statistics-heading\">\n\t\t\t\t\t\t<Title level={3} className=\"coin-details-heading\">\n\t\t\t\t\t\t\t{cryptoDetails.name} Value Statistic\n\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t<p>An Overview showing the stats of {cryptoDetails.name}</p>\n\t\t\t\t\t</Col>\n\t\t\t\t\t{stats.map(({ icon, title, value }) => (\n\t\t\t\t\t\t<Col className=\"coin-stats\">\n\t\t\t\t\t\t\t<Col className=\"coin-stats-name\">\n\t\t\t\t\t\t\t\t<Text> {icon}</Text>\n\t\t\t\t\t\t\t\t<Text>{title}</Text>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Text className=\"stats\">{value}</Text>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t))}\n\t\t\t\t</Col>\n\t\t\t\t<Col className=\"other-stats-info\">\n\t\t\t\t\t<Col className=\"coin-value-statistics-heading\">\n\t\t\t\t\t\t<Title level={3} className=\"coin-details-heading\">\n\t\t\t\t\t\t\tOther Statistics\n\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t<p>An Overview showing the stats of all cryptocurrencies</p>\n\t\t\t\t\t</Col>\n\t\t\t\t\t{genericStats.map(({ icon, title, value }) => (\n\t\t\t\t\t\t<Col className=\"coin-stats\">\n\t\t\t\t\t\t\t<Col className=\"coin-stats-name\">\n\t\t\t\t\t\t\t\t<Text> {icon}</Text>\n\t\t\t\t\t\t\t\t<Text>{title}</Text>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Text className=\"stats\">{value}</Text>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t))}\n\t\t\t\t</Col>\n\t\t\t</Col>\n\t\t\t<Col className=\"coin-desc-link\">\n\t\t\t\t<Row className=\"coin-desc\">\n\t\t\t\t\t<Title title={3} className=\"coin-details-heading\">\n\t\t\t\t\t\tWhat is {cryptoDetails.name}\n\t\t\t\t\t\t{HTMLReactParser(cryptoDetails.description)}\n\t\t\t\t\t</Title>\n\t\t\t\t</Row>\n\t\t\t\t<Col className=\"coin-links\">\n\t\t\t\t\t<Title level={3} className=\"coin-details-heading\">\n\t\t\t\t\t\t{cryptoDetails.name} Links\n\t\t\t\t\t</Title>\n\t\t\t\t\t{cryptoDetails.links?.map((link) => (\n\t\t\t\t\t\t<Row className=\"coin-link\" key={link.name}>\n\t\t\t\t\t\t\t<Title level={5} className=\"link-name\">\n\t\t\t\t\t{link.type}\n\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t<a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t\t{link.name}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t))}\n\t\t\t\t</Col>\n\t\t\t</Col>\n\t\t</Col>\n\t);\n};\n\nexport default CryptoDetails;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\nimport { Navbar, Exchanges, Homepage, News, Cryptocurrencies, CryptoDetails } from './components';\nimport './App.css';\n\nconst Apps = () => (\n\t<div className=\"app\">\n\t\t<div className=\"navbar\">\n\t\t\t<Navbar />\n\t\t</div>\n\t\t<div className=\"main\">\n\t\t\t<Layout>\n\t\t\t\t<div className=\"routes\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<Homepage />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/news\">\n\t\t\t\t\t\t\t<News />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/cryptocurrencies\">\n\t\t\t\t\t\t\t<Cryptocurrencies />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/exchanges\">\n\t\t\t\t\t\t\t<Exchanges />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/crypto/:coinId\">\n\t\t\t\t\t\t\t<CryptoDetails />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Layout>\n\n\t\t\t<div className=\"footer\">\n\t\t\t\t<Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>\n\t\t\t\t\tCopyright © 2021\n\t\t\t\t\t<Link to=\"/\">Cryptoverse Inc.</Link> <br />\n\t\t\t\t\tAll Rights Reserved.\n\t\t\t\t</Typography.Title>\n\t\t\t\t<Space>\n\t\t\t\t\t<Link to=\"/\">Home</Link>\n\t\t\t\t\t<Link to=\"/exchanges\">Exchanges</Link>\n\t\t\t\t\t<Link to=\"/news\">News</Link>\n\t\t\t\t</Space>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n);\n\nexport default Apps;\n","//created a store that will store all data ==> The Provider will wrap <App/> and give access to the state\nimport { configureStore } from '@reduxjs/toolkit';\nimport { cryptoApi } from '../services/cryptoApi';\nimport { cryptoNewsApi } from '../services/cryptoNewsApi'\n\n//redux boilerplate pass in the query function. cryptoApi/cryptoNewsApi\nexport default configureStore({\n\treducer: {\n\t\t[cryptoApi.reducerPath]: cryptoApi.reducer,\n\t\t[cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n\t},\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';//wraps <App/> and gives the application access to all data\nimport App from './App';\nimport store from './app/store';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n\t<Router>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</Router>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}